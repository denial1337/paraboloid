std::ifstream fin(filename);
	int filesize = 0;				//переменная для подсчета количества точек

									/*подсчет количества точек в файле*/
	if (!(fin.is_open()))
	{
		std::cout << "Ошибка при чтении файла\n";
		getchar();
		return 0;
	}
	else
	{
		char tch[1024];								//переменная для считывания
		while (!fin.eof())
		{
			fin.getline(tch, 1024);
			if (tch[0] != '\0' && tch[0] != '\n')	//если в начале строки не встречен переход на новую строчку или символ конца строки инкрементируем счетчик
				filesize++;
		}
	}
	fin.close();
	fin.open(filename);
	double ** pdata = new double*[filesize];			//массив точек
	for (int k(0); k < filesize; k++)
	{
		pdata[k] = new double[3];
	}
	if (fin.eof())
		fin.clear();
	int cnt = 0;
	if (!(fin.is_open()))
	{
		std::cout << "Ошибка при чтении файла\n";
		getchar();
		return 0;
	}
	else
	{
		while (!fin.eof())
		{
			fin >> pdata[cnt][0];
			fin >> pdata[cnt][1];
			fin >> pdata[cnt][2];
			cnt++;
		}
	}
	fin.close();
	/*игнорируем пустые строчки в конце файла*/
	/*мы не удаляем пустые строки из массива, а просто уменьшаем его размерность*/
	/*внимательно при использовании for_each*/
	while (pdata[filesize - 1][0] == 0 && pdata[filesize - 1][0] == 0 && pdata[filesize - 1][0] == 0)
		filesize--;
	std::cout << endl << "filesize " << filesize << endl;

	double ** data = new double*[filesize];
	for (int k(0); k < filesize; k++)
	{
		data[k] = new double[3];
	}
	cnt = 0;
	for (int k(0); k < filesize; k++)
	{
		data[cnt][0] = pdata[k][0];
		data[cnt][1] = pdata[k][1];
		data[cnt][2] = pdata[k][2];
		cnt++;
	}
